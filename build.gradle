plugins {
    id 'java'
    id 'application'
    // 引入 shadow 外掛程式來建立 fat JAR
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

// 設定 Java 來源和目標版本
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

shadowJar {
    archiveBaseName = 'image-compression'
    archiveClassifier = '' // 產生的檔名將是 image-compression-1.0-SNAPSHOT.jar
}

// 應用程式的主要設定
application {
    // 指定包含 main 方法的主類別
    mainClass = 'work.pollochang.compression.image.Execute'
}

group = 'work.pollochang.compression.image'
version = '0.1.0'

repositories {
    mavenCentral()
}

dependencies {

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    runtimeOnly("org.slf4j:slf4j-api:2.0.17")

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation("ch.qos.logback:logback-classic:1.5.18")

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    implementation("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")

    // https://mvnrepository.com/artifact/info.picocli/picocli
    implementation("info.picocli:picocli:4.7.7")

    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-jpeg
    implementation("com.twelvemonkeys.imageio:imageio-jpeg:3.12.0")
    // https://mvnrepository.com/artifact/com.twelvemonkeys.common/common-io
    implementation("com.twelvemonkeys.common:common-io:3.12.0")
    // https://mvnrepository.com/artifact/com.twelvemonkeys.common/common-image
    implementation("com.twelvemonkeys.common:common-image:3.12.0")

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation("com.fasterxml.jackson.core:jackson-databind:2.19.1")

    // https://mvnrepository.com/artifact/com.h2database/h2
    runtimeOnly("com.h2database:h2:2.3.232")
}

test {
    useJUnitPlatform()
}

task runDev(type: JavaExec) {
    // 將任務分組，方便在 Gradle Tasks 視窗中尋找
    group = "application"
    description = "使用開發環境的日誌設定 (logback-dev.xml) 來執行應用程式。"

    // 設定執行的 classpath，包含編譯後的 class 和所有依賴
    classpath = sourceSets.main.runtimeClasspath

    // 指定您的主類別
    mainClass = 'work.pollochang.compression.image.Execute'

    // 透過 JVM 系統屬性告訴 Logback 使用 logback-dev.xml
    // 使用 file() 方法來確保路徑是相對於專案根目錄，更為穩健
    systemProperty 'logback.configurationFile', file('src/main/resources/logback-dev.xml').absolutePath

    // 這裡是傳遞給您 picocli 應用程式的命令列參數
    // 請務必修改為您自己的路徑
    args '--file-list', '/data/tmp/resize-image/file-list.txt',
            '--output-dir', '/data/tmp/resize-image/result',
            '--quality', '0.25'
}

shadowJar {
    dependsOn test
    // 確保只有測試通過才執行打包
    mustRunAfter test
}
